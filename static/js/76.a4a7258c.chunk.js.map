{"version":3,"file":"static/js/76.a4a7258c.chunk.js","mappings":"yNACA,GAAgB,KAAO,mBAAmB,KAAO,oB,SCGlC,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,IAPAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,eAAyBH,EAAS,YAAYI,MAAK,SAAAC,GAEjDN,EAAQM,EAAIP,KACb,GACF,GAAE,CAACE,IAECF,EAGL,OACE,eAAIQ,UAAWC,EAAAA,KAAf,SACGT,EAAKU,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACnC,OACE,eAAaN,UAAWC,EAAAA,KAAxB,UAEI,iCACE,gBACEM,IACEH,EAAY,0CAC2BA,GACnC,0FAENI,IAAI,GACJC,MAAM,MACNC,OAAO,SAET,wBAAKL,KACL,cAAGL,UAAWC,EAAAA,KAAd,8BAAuCK,SAdpCH,EAmBZ,KAGN,C,sBC5CD,SAASQ,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOtB,KAAKiB,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C,sDC7BeC,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,8FACeC,MACX,0FAECpC,MAAK,SAAAqC,GAEJ,GAAIA,EAASC,GACX,OAAOD,EAASE,MAEnB,IACAC,OAAM,SAAAP,GAAG,OAAIQ,QAAQlB,MAAMU,EAAlB,IAVd,0GAaeS,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,WAA8BC,GAA9B,0FAAwCC,EAAxC,+BAAoD,GAApD,SACeR,MAAM,sCAAD,OACsBO,GADtB,OACiCC,EADjC,8CAGf5C,MAAK,SAAAqC,GAEJ,GAAIA,EAASC,GAEX,OAAOD,EAASE,MAEnB,IACAC,OAAM,SAAAP,GAAG,OAAIQ,QAAQlB,MAAMU,EAAlB,IAXd,2GAceY,SAAAA,IAAf,OAAeA,EAAAA,EAAAA,IAAAA,MAAf,WAAiCC,GAAjC,iFAEeV,MAAM,4FAAD,OAC4EU,IAE3F9C,MAAK,SAAAqC,GAEJ,GAAIA,EAASC,GAEX,OAAOD,EAASE,MAEnB,IACAC,OAAM,SAAAP,GAAG,OAAIQ,QAAQlB,MAAMU,EAAlB,IAZd,0GAeA,IAAMlC,EAAY,CAAEoC,oB,WA1CLA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA0C0BO,eA1CzC,SAa8B,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA6B0CG,kBA7BzD,SAciC,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,GAiBf,G","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moviesApi from 'services/movies-api';\nimport css from './Cast.module.css';\nexport default function Cast() {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    moviesApi.fetchMovieById(movieId, '/credits').then(res => {\n      // console.log(res);\n      setCast(res.cast);\n    });\n  }, [movieId]);\n\n  if (!cast) return;\n  // console.log(cast);\n\n  return (\n    <ul className={css.list}>\n      {cast.map(({ id, profile_path, name, character }) => {\n        return (\n          <li key={id} className={css.item}>\n            {\n              <>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : 'https://www.ukrposhta.ua/uploads/photos/shares/15.03.2022/photo_2022_04_23_08_34_35.jpg'\n                  }\n                  alt=\"\"\n                  width=\"375\"\n                  height=\"478\"\n                ></img>\n                <h3>{name}</h3>\n                <p className={css.text}>{`Character: ${character}`}</p>\n              </>\n            }\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\n// https://www.ukrposhta.ua/uploads/photos/shares/15.03.2022/photo_2022_04_23_08_34_35.jpg\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","async function fetchTrendingMovies() {\n  return await fetch(\n    'https://api.themoviedb.org/3/trending/all/day?api_key=7c0c458e245909c66f3397c50f32766a'\n  )\n    .then(response => {\n      // console.log('response.ok: ', response.ok);\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    .catch(err => console.error(err));\n}\n\nasync function fetchMovieById(movie_id, queryType = '') {\n  return await fetch(\n    `https://api.themoviedb.org/3/movie/${movie_id}${queryType}?api_key=7c0c458e245909c66f3397c50f32766a`\n  )\n    .then(response => {\n      // console.log('response.ok: ', response.ok);\n      if (response.ok) {\n        // console.log(response);\n        return response.json();\n      }\n    })\n    .catch(err => console.error(err));\n}\n\nasync function fetchMovieOnQuery(query) {\n  // console.log(query);\n  return await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=7c0c458e245909c66f3397c50f32766a&query=${query}`\n  )\n    .then(response => {\n      // console.log('fetchMovieOnQuery-->response.ok: ', response.ok);\n      if (response.ok) {\n        // console.log('fetchMovieOnQuery-->response: ', response);\n        return response.json();\n      }\n    })\n    .catch(err => console.error(err));\n}\n\nconst moviesApi = { fetchTrendingMovies, fetchMovieById, fetchMovieOnQuery };\n\nexport default moviesApi;\n\n// 'https://api.themoviedb.org/3/search/movie?query=batman&include_adult=false&language=en-US&page=1'\n"],"names":["Cast","useState","cast","setCast","movieId","useParams","useEffect","moviesApi","then","res","className","css","map","id","profile_path","name","character","src","alt","width","height","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","fetchTrendingMovies","fetch","response","ok","json","catch","console","fetchMovieById","movie_id","queryType","fetchMovieOnQuery","query"],"sourceRoot":""}